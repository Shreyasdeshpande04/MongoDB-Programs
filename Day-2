# üî¢ MongoDB Data Types & Operators

## üìö Data Types in MongoDB

### 1Ô∏è‚É£ String

**Syntax:** `"value"`
**Example:**
{name: "Rahul"}

---

### 2Ô∏è‚É£ Number (Int / Double)

**Syntax:** `NumberInt(value)` or plain number
**Example:**
{age: 22, price: 99.99}

---

### 3Ô∏è‚É£ Boolean

**Syntax:** `true / false`
**Example:**
{isActive: true}

---

### 4Ô∏è‚É£ Date

**Syntax:** `new Date("<YYYY-MM-DD>")`
**Example:**
{createdAt: new Date("2025-08-25")}

---

### 5Ô∏è‚É£ Array

**Syntax:** `[value1, value2, ...]`
**Example:**
{hobbies: \["reading", "coding", "traveling"]}

---

### 6Ô∏è‚É£ Object (Embedded Document)

**Syntax:** `{ key: value, key2: value }`
**Example:**
{address: {city: "Mumbai", pincode: 400001}}

---

## ‚öôÔ∏è MongoDB Operators

### üü¢ A. Comparison Operators

#### 1Ô∏è‚É£ `$eq` (Equal To)

**Syntax:**
db.collection.find({ field: { \$eq: value } })
**Example:**
db.students.find({ age: { \$eq: 22 } })

---

#### 2Ô∏è‚É£ `$ne` (Not Equal To)

**Syntax:**
db.collection.find({ field: { \$ne: value } })
**Example:**
db.students.find({ age: { \$ne: 18 } })

---

#### 3Ô∏è‚É£ `$gt` (Greater Than)

**Syntax:**
db.collection.find({ field: { \$gt: value } })
**Example:**
db.students.find({ age: { \$gt: 20 } })

---

#### 4Ô∏è‚É£ `$lt` (Less Than)

**Syntax:**
db.collection.find({ field: { \$lt: value } })
**Example:**
db.students.find({ age: { \$lt: 25 } })

---

#### 5Ô∏è‚É£ `$gte` (Greater Than or Equal To)

**Syntax:**
db.collection.find({ field: { \$gte: value } })
**Example:**
db.students.find({ age: { \$gte: 21 } })

---

#### 6Ô∏è‚É£ `$lte` (Less Than or Equal To)

**Syntax:**
db.collection.find({ field: { \$lte: value } })
**Example:**
db.students.find({ age: { \$lte: 23 } })

---

### üî∂ B. Logical Operators

#### 1Ô∏è‚É£ `$and`

**Syntax:**
db.collection.find({ \$and: \[ { field1: value1 }, { field2: value2 } ] })
**Example:**
db.students.find({ \$and: \[ { age: { \$gte: 20 } }, { isActive: true } ] })

---

#### 2Ô∏è‚É£ `$or`

**Syntax:**
db.collection.find({ \$or: \[ { field1: value1 }, { field2: value2 } ] })
**Example:**
db.students.find({ \$or: \[ { age: 18 }, { age: 25 } ] })

---

#### 3Ô∏è‚É£ `$nor`

**Syntax:**
db.collection.find({ \$nor: \[ { field1: value1 }, { field2: value2 } ] })
**Example:**
db.students.find({ \$nor: \[ { age: 18 }, { isActive: false } ] })

---

#### 4Ô∏è‚É£ `$not`

**Syntax:**
db.collection.find({ field: { \$not: { condition } } })
**Example:**
db.students.find({ age: { \$not: { \$gt: 25 } } })
